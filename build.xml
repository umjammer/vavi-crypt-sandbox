<?xml version="1.0" encoding="utf-8"?>

<!-- ////////////////////////////////////////////////////////////////////// -->
<!-- Copyright (c) 2002 by Naohide Sano, All rights reserved.               -->
<!--                                                                        -->
<!-- Written by Naohide Sano                                                -->
<!--                                                                        -->
<!-- ssl                                                                    -->
<!--                                                                        -->
<!-- @author Naohide Sano                                                   -->
<!-- @version 0.00 031109 nsano initial version                             -->
<!--                                                                        -->
<!-- ////////////////////////////////////////////////////////////////////// -->

<project name="vavi-crypt-sandbox" default="run" basedir="."
  xmlns:artifact="urn:maven-artifact-ant">

  <path id="maven-ant-tasks.classpath">
    <fileset dir="${user.home}/lib/java/maven-ant-tasks">
      <include name="*.jar" />
    </fileset>
  </path>
  <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
           uri="urn:maven-artifact-ant"
           classpathref="maven-ant-tasks.classpath" />

  <property environment="env" />
  <property file="local.properties" />

  <xmlproperty file="pom.xml" />

  <!-- Path Definitions -->
  <path id="project.class.path">
    <pathelement location="${javac.dest.test}" />
    <pathelement location="${javac.dest}" />
    <fileset refid="maven-ant-tasks.dependency.fileset" />
  </path>

  <!-- prepare -->
  <target name="prepare" description="Preparing">
    <artifact:pom file="pom.xml" id="maven.project" />
    <artifact:dependencies fileSetId="maven-ant-tasks.dependency.fileset">
      <pom refid="maven.project" />
    </artifact:dependencies>
    <artifact:mvn pom="pom.xml">
      <arg value="clean" />
      <arg value="package" />
      <arg value="-Dmaven.test.skip=true"/>
    </artifact:mvn>
  </target>

  <!-- javah -->
  <target name="javah" depends="prepare" description="Makeing Header">
    <javah destdir="src">
      <classpath>
        <pathelement location="src" />
        <path refid="project.class.path" />
      </classpath>
      <class name="com.boyter.mscrypto.MSCryptoManager" />
    </javah>
  </target>

  <!-- gcc cygwin -->
  <target name="compile.native.cygwin" depends="javah" description="Compiling C">
    <apply executable="gcc" dest="${dir.native}" parallel="false">
      <arg value="-c" />
      <arg line="-g -Wall -O2" />
      <arg line="-mwindows -mno-cygwin"/>
      <arg value="-Isrc" />
      <arg value="-I${mingw.include}" />
      <arg value="-I${w32api.include}" />
      <arg value="-I${jdk.home}/include" />
      <arg value="-I${jdk.home}/include/win32" />
      <arg value="-o"/>
      <targetfile/>
      <srcfile/>
      <fileset dir="${dir.native}" includes="*.c"/>
      <mapper type="glob" from="*.c" to="*.o"/>
    </apply>
  </target>

  <!-- link cygwin -->
  <target name="link.cygwin" depends="compile.native.cygwin" description="Makeing DLL">
    <apply executable="dllwrap" dest="lib">
      <arg value="--add-stdcall-alias" />
      <arg line="--driver-name gcc" />
      <arg line="-mwindows --target=i386-mingw32" />
      <arg line="-o" />
      <targetfile />
      <srcfile />
      <arg value="lib/libcrypt32.a" />
      <arg value="${windows.home}/crypt32.dll" />
      <arg line="-s -mno-cygwin" />
      <fileset dir="${dir.native}" includes="*.o"/>
      <mapper type="glob" from="*.o" to="*.dll"/>
    </apply>
  </target>

  <!-- packaging.gi -->
  <target name="packaging.gi" depends="prepare" description="Packaging instrumentation">
    <jar jarfile="gi.jar" manifest="etc/manifest.mf">
      <fileset dir="${dir.build}">
        <include name="GenericInstrumentation*.class" />
        <include name="PropertiesClassFileTransformer*.class" />
        <include name="PropertiesSecurityProviderAdder*.class" />
      </fileset>
    </jar>
  </target>

  <!-- packaging.mscrypto -->
  <target name="packaging.mscrypto" depends="" description="Packaging mscrypt">
    <jar jarfile="${mscrypt.signjar.jar}">
      <fileset dir="${javac.dest}">
        <include name="com/boyter/mscrypto/**/*.class" />
      </fileset>
    </jar>
    <signjar jar="${mscrypt.signjar.jar}"
             alias="${signjar.keystore.alias}"
             storepass="${signjar.keystore.password}"
             keystore="${signjar.keystore.file}" />
  </target>

  <!-- packaging.camellia -->
  <target name="packaging.camellia" depends="" description="Packaging camellia">
    <jar jarfile="${cammelia.signjar.jar}">
      <fileset dir="${javac.dest}">
        <include name="vavi/crypt/camellia/**/*.class" />
      </fileset>
    </jar>
    <signjar jar="${cammelia.signjar.jar}"
             alias="${signjar.keystore.alias}"
             storepass="${signjar.keystore.password}"
             keystore="${signjar.keystore.file}" />
  </target>

  <!-- jar -->
  <target name="packaging" depends="prepare" description="Packaging All">
    <antcall target="packaging.gi" />
    <antcall target="packaging.mscrypto" />
  </target>

  <!-- run -->
  <target name="run" depends="packaging" description="msrsatest">
    <java classname="msrsatest" fork="yes">
      <env key="PATH" path="lib" />
      <jvmarg value="-Djavax.net.ssl.trustStore=${signjar.keystore.file}"/>
      <jvmarg value="-Djava.security.manager" />
      <jvmarg value="-Djava.security.policy=gi.policy"/>
      <jvmarg value="-Djava.security.policy=mscrypto.policy"/>
      <jvmarg value="-javaagent:gi.jar"/>
      <classpath>
        <pathelement location="mscrypto.jar" />
        <path refid="project.class.path" />
      </classpath>
      <arg value="pkcs12" />
    </java>
  </target>

  <!-- t2 -->
  <target name="t2" depends="packaging" description="ssl test using mscrypto">
    <java classname="t113_2" fork="yes">
      <env key="PATH" path="lib" />
      <!--
      <jvmarg value="-Ddeployment.security.browser.keystore.use=true" />
      <jvmarg value="-Dsecurity.provider.1=com.boyter.mscrypto.MSKeyManagerProvider" />
      <jvmarg value="-Dsecurity.provider.2=com.boyter.mscrypto.MSTrustManagerProvider" />
      <jvmarg value="-Dsecurity.provider.3=com.boyter.mscrypto.MSRSACipherProvider" />
      <jvmarg value="-Dsecurity.provider.4=com.boyter.mscrypto.MSRSASignProvider" />
-->
      <jvmarg value="-javaagent:gi.jar" />
      <jvmarg value="-Djava.security.manager" />
      <jvmarg value="-Djava.security.policy=mscrypto.policy" />
      <classpath>
        <pathelement location="mscrypto.jar" />
        <path refid="project.class.path" />
      </classpath>
      <arg value="${t2.url}" />
    </java>
  </target>

  <!-- t2' -->
  <target name="t2d" depends="packaging" description="ssl test using mscrypto original">
    <java classname="t113_2" fork="yes">
      <env key="PATH" path="lib" />
      <!--
      <jvmarg value="-Ddeployment.security.browser.keystore.use=true" />
      <jvmarg value="-Dsecurity.provider.1=com.boyter.mscrypto.MSKeyManagerProvider" />
      <jvmarg value="-Dsecurity.provider.2=com.boyter.mscrypto.MSTrustManagerProvider" />
      <jvmarg value="-Dsecurity.provider.3=com.boyter.mscrypto.MSRSACipherProvider" />
      <jvmarg value="-Dsecurity.provider.4=com.boyter.mscrypto.MSRSASignProvider" />
-->
      <jvmarg value="-javaagent:gi.jar" />
      <jvmarg value="-Djava.security.manager" />
      <jvmarg value="-Djava.security.policy=mscrypto.policy" />
      <classpath>
        <pathelement location="lib/mscrypto.jar" />
        <path refid="project.class.path" />
        <fileset dir="${dir.build}">
          <exclude name="com/**/*" />
          <exclude name="org/**/*" />
        </fileset>
      </classpath>
      <arg value="${t2.url}" />
    </java>
  </target>

  <!-- t3 -->
  <target name="t3" depends="prepare,packaging.gi" description="ssl test using opensign">
    <java classname="t113_3" fork="yes">
      <env key="PATH" path="lib" />
      <jvmarg value="-javaagent:gi.jar" />
      <classpath>
        <path refid="project.class.path" />
      </classpath>
      <arg value="${t2.url}" />
    </java>
  </target>

  <!-- t13 -->
  <target name="t13" depends="prepare" description="SSL">
    <java classname="t13" fork="yes">
      <jvmarg value="-Dfile.encoding=UTF-8" />
      <jvmarg value="-Djavax.net.ssl.keyStore=${t13.jks.file}" />
      <jvmarg value="-Djavax.net.ssl.keyStorePassword=${t13.jks.password}" />
      <classpath refid="project.class.path" />
      <arg value="${t13.url}" />
    </java>
  </target>

  <!-- t19 -->
  <target name="t19" depends="prepare" description="crypt">
    <java classname="t19" fork="yes">
      <classpath refid="project.class.path" />
    </java>
  </target>

</project>

<!-- -->
